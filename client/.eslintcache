[{"C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\index.js":"1","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\App.js":"2","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\pages\\SavedBooks.js":"3","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\pages\\SearchBooks.js":"4","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\components\\Navbar.js":"5","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\components\\LoginForm.js":"6","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\components\\SignupForm.js":"7","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\utils\\API.js":"8","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\utils\\localStorage.js":"9","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\utils\\auth.js":"10","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\utils\\mutations.js":"11","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\utils\\queries.js":"12"},{"size":228,"mtime":1653844910917,"results":"13","hashOfConfig":"14"},{"size":1314,"mtime":1653845057495,"results":"15","hashOfConfig":"14"},{"size":2967,"mtime":1653842407707,"results":"16","hashOfConfig":"14"},{"size":4737,"mtime":1653842235950,"results":"17","hashOfConfig":"14"},{"size":2524,"mtime":1653745893138,"results":"18","hashOfConfig":"14"},{"size":2654,"mtime":1653791960967,"results":"19","hashOfConfig":"14"},{"size":3301,"mtime":1653786238869,"results":"20","hashOfConfig":"14"},{"size":1392,"mtime":1653745893141,"results":"21","hashOfConfig":"14"},{"size":793,"mtime":1653745893142,"results":"22","hashOfConfig":"14"},{"size":1234,"mtime":1653745893142,"results":"23","hashOfConfig":"14"},{"size":1137,"mtime":1653780565072,"results":"24","hashOfConfig":"14"},{"size":355,"mtime":1653779715537,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k9o4gw",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\index.js",[],"C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\App.js",[],"C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\pages\\SavedBooks.js",[],"C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\pages\\SearchBooks.js",[],"C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\components\\Navbar.js",[],["53","54"],"C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\components\\LoginForm.js",["55"],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\n// import { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [login, { error }] = useMutation(LOGIN_USER)\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({\n        variables: {...userFormData}\n      });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n    \n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\components\\SignupForm.js",["56"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { ADD_USER } from '../utils/mutations';\n// import { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { useMutation } from '@apollo/client';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData }\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\utils\\API.js",[],"C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\utils\\auth.js",[],"C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\utils\\mutations.js",[],"C:\\Users\\prash\\OneDrive\\Desktop\\Rutgers\\Homework\\HW21\\book-search\\client\\src\\utils\\queries.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":17,"column":19,"nodeType":"63","messageId":"64","endLine":17,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":16,"column":21,"nodeType":"63","messageId":"64","endLine":16,"endColumn":26},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]